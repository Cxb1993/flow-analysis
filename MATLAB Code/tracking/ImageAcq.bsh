import org.micromanager.MMStudioMainFrame; 
import org.micromanager.api.AcquisitionEngine; 
import mmcorej.*; 
import java.io.*; 
import java.util.*; 
import javax.comm.*; 

import ij.*;
import ij.plugin.*;
import ij.IJ;
import ij.ImagePlus;
import ij.ImageWindow;
import ij.ImageCanvas;
import java.awt.Dimension;
import ij.io.FileSaver;
import ij.process.*;
import ij.WindowManager;
import org.micromanager.api.AcquisitionOptions;

Integer nFrames=4000; // # frames: starts at 0

void captureImage(Integer iNum)
	{
		// save pre-frame to TIF
		//mmc.waitForSystem();
		mmc.snapImage(); //snap image from mm core
		img = mmc.getImage(); //pull from mem
		width = mmc.getImageWidth();
		height = mmc.getImageHeight();
		byteDepth = mmc.getBytesPerPixel();
		if (byteDepth == 1) {
		   ip = new ByteProcessor((int)width, (int)height);
		   ip.setPixels(img);
		} else if (byteDepth==2) {
		   ip = new ShortProcessor((int)width, (int)height);
		   ip.setPixels(img);
		} else {
		   console.message("Unknown byte depth.");
		   return;
		}
		ImagePlus imp = new ImagePlus("test.tif", ip);
		FileSaver fs = new FileSaver(imp);

		svName = iNum +".tif";   
		svOut = "Z:/MATLAB/TractionForceMicroscopy/tracking/live_images/"+svName;
		fs.saveAsTiff(svOut);
		//return;
	}

//THIS IS THE MAIN LOOP
{

//MMStudioMainFrame gui = MMStudioMainFrame.getInstance(); 
CMMCore mmc = gui.getMMCore(); 
FIRST_IMAGE_NAME = 0;
//acq = gui.getAcquisitionEngine(); 
for(Integer caps=FIRST_IMAGE_NAME;caps<=nFrames;++caps) //master Loop 
	{
	captureImage(caps);	
	gui.sleep(1000);
	}
}